import java.awt.Color;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JScrollPane;

import java.awt.event.KeyEvent;

import java.awt.event.KeyListener;

import java.io.*;

import com.sun.speech.freetts.*;



public class Robochat1 extends javax.swing.JFrame implements KeyListener {
 
    
     String[][] chatbot=
            {
                
                
                
                
                {"hi","Hi","hello","Hello","hey","Hey"},
                {"hello","hey"},
                 
                {"how are you","how are you?","How are you","How are you?"},
                {"doing well","quite nice"},
             
                {"Can we be friends?","can we be friends?","can we be friends","Can we be friends?"},
                {"Yes!!!of course!!!","sure,why not!"},
                
                {"What are you doing","what are you doing"},
                {"Nothing special","well!really nothing!!!"},
                
                {"are you a bot","are you blaze"},
                {"well,you can imagine me according to your wish"},
                
                {"is anish mitra a madarchod"},
                {"definitely! he is a big madarchod,bhosdiwala,khanki,kutta,sloth"},
              
                {"Blaze is unavailable right now.Your string is saved"}
                    
                
            };
    
    
    public Robochat1() {
        super("Chat of Blaze");
        initComponents();
         
        
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        
        dialog.setEditable(false);
        input.addKeyListener((KeyListener) this);
       
        
        setVisible(true);        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        dialog = new javax.swing.JTextArea();
        input = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        dialog.setColumns(20);
        dialog.setRows(5);
        jScrollPane1.setViewportView(dialog);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 153, 0));
        jButton1.setText("Speak");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(input, javax.swing.GroupLayout.PREFERRED_SIZE, 671, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 382, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(input)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private static final String VOICENAME="kevin16";
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        Voice voice;
        VoiceManager vm=VoiceManager.getInstance();
        voice=vm.getVoice(VOICENAME);
        voice.allocate();
        try
        {
            
            voice.speak(dialog.getText());
        }
        catch(Exception e)
                {
                    
                }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new Robochat1();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Robochat1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea dialog;
    private javax.swing.JTextField input;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
      
    }

    @Override
    public void keyPressed(KeyEvent e) {
        if(e.getKeyCode()==KeyEvent.VK_ENTER) //Enter key pressed VK_ENTER KEY CODE
        {
            input.setEditable(false);
            String quote=input.getText();
            input.setText("");
            addText("-->You:\t"+quote);
            quote.trim();
            while(quote.charAt(quote.length()-1)=='!'||
                    quote.charAt(quote.length()-1)=='.'||
                    quote.charAt(quote.length()-1)=='?'
                    
                    
                    )
            {
               quote=quote.substring(0,quote.length()-1); 
            }
            
            quote.trim();
            byte response=0;
            //we are searching chatbot for matches
            //we did not find anything in chatbot[][]
            //we did find something in chatbot
            
            int j=0;
            while(response==0)
            {
                if(inArray(quote.toLowerCase(),chatbot[j*2]))
                {
                    response=2;
                    int r=(int)Math.floor(Math.random()*chatbot[(j*2)+1].length);
                    
                    addText("\n--->Blaze:\t"+chatbot[(j*2)+1][r]);
                }
                
                j++;
                if(j*2==chatbot.length-1 && response==0)
                {
                    response=1;
                }
            }
            if(response==1)
            {
                 int r=(int)Math.floor(Math.random()*chatbot[chatbot.length-1].length);
                    
                    addText("\n--->Blaze\t"+chatbot[chatbot.length-1][r]);
            }
            addText("\n");
        }
    }

    @Override
    public void keyReleased(KeyEvent e) {
        if(e.getKeyCode()==KeyEvent.VK_ENTER)
    {
        input.setEditable(true);
    }
    }
    
    
    public void addText(String str)
   {
       dialog.setText(dialog.getText()+str);
   }

    private boolean inArray(String in, String[] str) {
        
        boolean match=false;
        for(int i=0;i<str.length;i++)
        {
            if(str[i].equals(in))
            {
                match=true;
            }
            
        }
        return match;
        
    }
    
}
